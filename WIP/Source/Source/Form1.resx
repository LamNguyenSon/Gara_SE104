<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>